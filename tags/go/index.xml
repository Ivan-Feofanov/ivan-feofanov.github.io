<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on Ivan Feofanov</title><link>https://ivan-feofanov.github.io/tags/go/</link><description>Recent content in go on Ivan Feofanov</description><generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Sat, 07 Mar 2020 13:16:09 +0500</lastBuildDate><atom:link href="https://ivan-feofanov.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Маршалинг и анмаршалинг нестандартных форматов дат</title><link>https://ivan-feofanov.github.io/posts/2020-03-07_go-non-standard-dates-marshalling/</link><pubDate>Sat, 07 Mar 2020 13:16:09 +0500</pubDate><guid>https://ivan-feofanov.github.io/posts/2020-03-07_go-non-standard-dates-marshalling/</guid><description>Думаю, многие согласятся, что работа с датами практически в любом языке программирования это невероятная головная боль. Дата и время не десятичны, часовые пояса — господи, почему они не могут быть просто целыми — ну и конечно бесчисленное множество форматов даты и времени.</description></item><item><title>Как перекодировать Windows-1251 в UTF8 в Go без страданий</title><link>https://ivan-feofanov.github.io/posts/windows1251-utf8-converting/</link><pubDate>Sat, 01 Feb 2020 18:31:48 +0500</pubDate><guid>https://ivan-feofanov.github.io/posts/windows1251-utf8-converting/</guid><description>Ниже история одной моей довольно забавной ошибки. Воистину, программист никогда не заскучает; даже имея в руках идеальный инструмент, он сможет применить его неправильно. Что уж говорить об инструментах неидеальных?</description></item><item><title>Тестирование не для начинающих</title><link>https://ivan-feofanov.github.io/posts/testing-not-for-beginners-2af2533ffb26/</link><pubDate>Thu, 09 May 2019 11:35:06 +0000</pubDate><guid>https://ivan-feofanov.github.io/posts/testing-not-for-beginners-2af2533ffb26/</guid><description>Перевод статьи “Testing is Not for Beginners” Джонатана Калхуна
Я большой фанат тестирования. Я пишу об этом в блог и почтовую рассылку, я обсуждаю это c другими разработчиками в свободное время, я зашел так далеко, что даже создал обучающий курс по тестированию в Go.</description></item><item><title>Практичный путеводитель по переменным окружения в Go</title><link>https://ivan-feofanov.github.io/posts/2019-04-02_go-1c6ab49c7d45/</link><pubDate>Tue, 02 Apr 2019 10:23:55 +0000</pubDate><guid>https://ivan-feofanov.github.io/posts/2019-04-02_go-1c6ab49c7d45/</guid><description>Перевод оригинальной статьи “A no-nonsense guide to environment variables in Go”
Переменные окружения — лучший способ хранения конфигурации приложения, поскольку они могут быть заданы на системном уровне.</description></item></channel></rss>